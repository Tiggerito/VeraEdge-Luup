-- Vera - Apps - Develop apps->Edit Startup Lua

-- For Vera Concierge
require("ConciergeServer")

-- Watch my ZRC-90 Scene Master 
luup.variable_watch("sceneMasterButtonPress","urn:micasaverde-com:serviceId:SceneController1","sl_CentralScene",62)

-- Watch my Vision ZT 1101BR-5 Keyfob
 -- luup.variable_watch("fobButtonPressLastSceneID","urn:micasaverde-com:serviceId:SceneController1","LastSceneID",72)
 luup.variable_watch("fobButtonPressLastSceneTime","urn:micasaverde-com:serviceId:SceneController1","LastSceneTime",72)
 -- luup.variable_watch("fobButtonPresssl_SceneActivated","urn:micasaverde-com:serviceId:SceneController1","sl_SceneActivated",72)

-- Watch my Fibaro The Button
luup.variable_watch("theButtonPress","urn:micasaverde-com:serviceId:SceneController1","sl_CentralScene",73)

-- Watch switches
luup.variable_watch("diningSwitch","urn:upnp-org:serviceId:SwitchPower1","Status",22)
luup.variable_watch("officeSwitch","urn:upnp-org:serviceId:SwitchPower1","Status",19)
luup.variable_watch("balconySwitch","urn:upnp-org:serviceId:SwitchPower1","Status",59)

function diningSwitch() 
	luup.log('Tonys Log: diningSwitch')
 	local status = luup.variable_get("urn:upnp-org:serviceId:SwitchPower1", "Status", 22) -- 1 = on, 0 = off
 	luup.log('Tonys Log: diningSwitch: ' .. status)
	
	if (status == "1") then -- on
		setLightDimming(22, "100") -- on to 100%
	end
end

function officeSwitch() 
	luup.log('Tonys Log: officeSwitch')
 	local status = luup.variable_get("urn:upnp-org:serviceId:SwitchPower1", "Status", 19) -- 1 = on, 0 = off
 	luup.log('Tonys Log: officeSwitch: ' .. status)
	
	if (status == "1") then -- on
		setLightDimming(19, "100") -- on to 100%
	end
end

function balconySwitch() 
	luup.log('Tonys Log: balconySwitch')
 	local status = luup.variable_get("urn:upnp-org:serviceId:SwitchPower1", "Status", 59) -- 1 = on, 0 = off
 	luup.log('Tonys Log: balconySwitch: ' .. status)
	
	if (status == "1") then -- on
		setLightDimming(59, "100") -- on to 100%
	end
end

function sceneMasterButtonPress()
	luup.log('Tonys Log: sceneMasterButtonPress')
	-- button is in the sl_CentralScene variable
	local originalButtonNumber = luup.variable_get("urn:micasaverde-com:serviceId:SceneController1", "sl_CentralScene", 62)
	luup.log('Tonys Log: SceneMaster: originalButtonNumber ' .. originalButtonNumber)

	-- how it was pressed is in the sl_CentralSceneAttr variable
	local buttonMode = luup.variable_get("urn:micasaverde-com:serviceId:SceneController1", "sl_CentralSceneAttr", 62) -- 3 = double press, 1 = long press, 0 = short press	
	luup.log('Tonys Log: SceneMaster: buttonMode: ' .. buttonMode)
	
	local buttonNumber = 0
	
	local buttonModeName = 'unknown pressed'
	
	if (buttonMode == "0") then
		buttonModeName = 'short pressed'
		buttonNumber = (originalButtonNumber + 1) / 2
	elseif (buttonMode == "1") then 
		buttonModeName = 'long pressed 1'
		buttonNumber = originalButtonNumber / 1 -- turn it into a number
	elseif (buttonMode == "2") then 
		buttonModeName = 'long pressed 2'
		buttonNumber = originalButtonNumber / 1 -- turn it into a number
	elseif (buttonMode == "3") then
		buttonModeName = 'double pressed'
		buttonNumber = originalButtonNumber / 2
	end
	
	luup.log('Tonys Log: SceneMaster: ' .. buttonModeName .. ' button ' .. buttonNumber)
	
	if (buttonMode == "0") then -- short press
		if (buttonNumber == 1) then
			kitchenToggle() -- kitchen
		elseif (buttonNumber == 2) then
			dimmingToggle(22) -- dinning
		elseif (buttonNumber == 3) then
			dimmingToggle(19) -- office
		elseif (buttonNumber == 4) then
			dimmingToggle(59) -- balcony
		elseif (buttonNumber == 5) then
			lightToggle(17) -- bedroom
		elseif (buttonNumber == 6) then
			lightToggle(48) -- entrance
		elseif (buttonNumber == 7) then
			lightToggle(32) -- stairs
		elseif (buttonNumber == 8) then
			lightToggle(53) -- monitors
		end	
	elseif (buttonMode == "1") then -- long press 1
		if (buttonNumber == 1) then
			runScene("21") -- living room lights on
		elseif (buttonNumber == 2) then
			setLightOn(22) -- dinning
		elseif (buttonNumber == 3) then
			setLightOn(19) -- office
		elseif (buttonNumber == 4) then
			setLightOn(59) -- balcony
		elseif (buttonNumber == 5) then
			setLightOn(17) -- bedroom
		elseif (buttonNumber == 6) then
			setLightOn(48) -- entrance
		elseif (buttonNumber == 7) then
			setLightOn(32) -- stairs
		elseif (buttonNumber == 8) then
			setLightOn(53) -- monitors
		end	
	elseif (buttonMode == "3") then -- double press
		if (buttonNumber == 1) then
			runScene("14") -- all off
		elseif (buttonNumber == 2) then
			setLightOff(22) -- dinning
		elseif (buttonNumber == 3) then
			setLightOff(19) -- office
		elseif (buttonNumber == 4) then
			setLightOff(59) -- balcony
		elseif (buttonNumber == 5) then
			runScene("11") -- to bed
		elseif (buttonNumber == 6) then
			setLightOff(48) -- entrance
		elseif (buttonNumber == 7) then
			setLightOff(32) -- stairs
		elseif (buttonNumber == 8) then
			setLightOff(53) -- monitors
		end	
	end
end



function fobButtonPressLastSceneTime()
	luup.log('Tonys Log: fobButtonPressLastSceneTime')
	-- To connect the device press 1+4 till red led flashes. hols 1m from Vera and have Vera Add Device.
	-- put in scene activation mode. Hold 1+3 till red light
	
	-- Note: central scene mode (2+4 till green) sl_CentralScene is set from 1 to 4 for buttons, and long presses cause repeats

	--  for the scene activation mode the button is in the LastSceneID
	local buttonNumber = luup.variable_get("urn:micasaverde-com:serviceId:SceneController1", "LastSceneID", 72)
	
	luup.log('Tonys Log: Fob Button: LastSceneTime: LastSceneID: ' .. buttonNumber)

	-- This event is slow, but it always fires and does not clash with button numbers
	
	-- Every second number is a long press
	if (buttonNumber == "1") then -- Button 1
		setLightOn(17) -- bedroom
	elseif (buttonNumber == "2") then -- Long Button 1
	elseif (buttonNumber == "3") then -- Button 2
		runScene("11") -- bed time
	elseif (buttonNumber == "4") then -- Long Button 2
	elseif (buttonNumber == "5") then -- Button 3
		setLightOff(17) -- bedroom
	elseif (buttonNumber == "6") then -- Long Button 3
	elseif (buttonNumber == "7") then -- Button 4
		runScene("14") -- all lights off
	elseif (buttonNumber == "8") then -- Long Button 4
	end	
end

function fobButtonPressLastSceneID()
	luup.log('Tonys Log: fobButtonPressLastSceneID')
	local LastSceneID = luup.variable_get("urn:micasaverde-com:serviceId:SceneController1", "LastSceneID", 72)
	luup.log('Tonys Log: Fob Button: LastSceneID: LastSceneID: ' .. LastSceneID)

	-- Does not fire if the LastSceneID does not change
end

function fobButtonPresssl_SceneActivated()
	luup.log('Tonys Log: fobButtonPresssl_SceneActivated')
	local LastSceneID = luup.variable_get("urn:micasaverde-com:serviceId:SceneController1", "LastSceneID", 72)
	luup.log('Tonys Log: Fob Button: sl_SceneActivated: LastSceneID: ' .. LastSceneID)
	local sl_SceneActivated = luup.variable_get("urn:micasaverde-com:serviceId:SceneController1", "sl_SceneActivated", 72)
	luup.log('Tonys Log: Fob Button: sl_SceneActivated: sl_SceneActivated: ' .. sl_SceneActivated)

	-- LastSceneID is not updated yet

	-- Button 1 = 1
	-- Long Button 1 = 2
	-- Button 2 = 4
	-- Long Button 2 = 0
	-- Button 3 = 8
	-- Long Button 3 = 1 -- Clashes with Button 1
	-- Button 4 = 4  -- Clashes with Button 2
	-- Long Button 4 = 3  
end

function theButtonPress()
	luup.log('Tonys Log: theButtonPress')
	local buttonNumber = luup.variable_get("urn:micasaverde-com:serviceId:SceneController1", "sl_CentralSceneAttr", 73)
	
	luup.log('Tonys Log: The Button ' .. buttonNumber)
	
	if (buttonNumber == "128") then -- Button x1
		kitchenToggle() -- kitchen
	elseif (buttonNumber == "129") then -- Button Release after Hold
	elseif (buttonNumber == "130") then -- Button Hold
	elseif (buttonNumber == "131") then -- Button x2
		runScene("11") -- bed time
	elseif (buttonNumber == "132") then -- Button x3
	elseif (buttonNumber == "133") then -- Button x4
	elseif (buttonNumber == "134") then -- Button x5
	elseif (buttonNumber == "135") then -- Button x6 ???
	end	
end

-- Special function to toggle my kitchen lights based on the state of one of the lights
function kitchenToggle()
	luup.log('Tonys Log: kitchenToggle')
	if (getLightPower(50) == "0") then
		runScene("3")
	else
		runScene("4")
	end
end

-- Helper functions to manage my lights

function dimmingToggle(device)
	luup.log('Tonys Log: dimmingToggle: ' .. device)
	if (isLightOn(device)) then
		if (getLightDimming(device) == "25") then
			-- half to off
			setLightOff(device)
		else
			-- other level to half
			setLightDimming(device, "25")
		end
	else
		-- off to fully on
		setLightOn(device)
	end
end

function lightToggle(device)
	luup.log('Tonys Log: lightToggle: ' .. device)
	if (isLightOn(device)) then
		setLightOff(device)
	else
		setLightOn(device)
	end
end

function isLightOn(device)
	luup.log('Tonys Log: isLightOn: ' .. device)
	return getLightPower(device) == "1"
end

function setLightOn(device)
	luup.log('Tonys Log: setLightOn: ' .. device)
	setLightPower(device, "1")
	setLightDimming(device, "100")
end

function setLightOff(device)
	luup.log('Tonys Log: setLightOff: ' .. device)
	setLightDimming(device, "100")
	setLightPower(device, "0")	
end

function getLightPower(device)
	luup.log('Tonys Log: getLightPower: ' .. device)
	local result = luup.variable_get("urn:upnp-org:serviceId:SwitchPower1", "Status", device)
	luup.log('Tonys Log: getLightPower: Status: ' .. result )
	return result
end

function setLightPower(device, power)
	luup.log('Tonys Log: setLightPower: ' .. device .. ', ' .. power)
	luup.call_action("urn:upnp-org:serviceId:SwitchPower1","SetTarget",{ newTargetValue = power }, device)
	luup.log('Tonys Log: setLightPower complete')
end

function getLightDimming(device)
	luup.log('Tonys Log: getLightDimming: ' .. device)
	local result = luup.variable_get("urn:upnp-org:serviceId:Dimming1", "LoadLevelStatus", device)
	luup.log('Tonys Log: getLightDimming: LoadLevelStatus: ' .. result)
	return result
end

function setLightDimming(device, dimming)
	luup.log('Tonys Log: setLightDimming: ' .. device .. ', ' .. dimming)
	luup.call_action("urn:upnp-org:serviceId:Dimming1", "SetLoadLevelTarget", {newLoadlevelTarget = dimming}, device)
	luup.log('Tonys Log: setLightDimming complete')
end

function runScene(scene)
	luup.log('Tonys Log: runScene: ' .. scene)
	luup.call_action("urn:micasaverde-com:serviceId:HomeAutomationGateway1", "RunScene", {SceneNum = scene}, 0)
	luup.log('Tonys Log: runScene complete')
end
